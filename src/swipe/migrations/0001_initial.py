# Generated by Django 3.2.8 on 2021-10-20 10:36

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import swipe.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0004_alter_client_notification_status'),
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=50)),
                ('publication_date', models.DateTimeField(auto_now_add=True)),
                ('foundation_document', models.CharField(choices=[('1', 'Собственность'), ('2', 'Договор с Застройщиком'), ('3', 'Договор купли-продажи'), ('4', 'Договор купли-продажи и ипотеки')], max_length=2)),
                ('appointment', models.CharField(choices=[('1', 'Апартаменты'), ('2', 'Квартира'), ('3', 'Дом')], max_length=2)),
                ('rooms', models.CharField(choices=[('1', '1 комнатная'), ('2', '2 комнатная'), ('3', '3 комнатная'), ('4', '4 комнатная'), ('5', '5 комнатная')], max_length=2)),
                ('layout', models.CharField(choices=[('1', 'Студия, санузел'), ('2', 'Гостинка'), ('3', 'Малосемейка'), ('4', 'Изолированные комнаты'), ('5', 'Смежные комнаты'), ('6', 'Свободная планировка')], max_length=2)),
                ('state', models.CharField(choices=[('1', 'Требует ремонта'), ('2', 'Не требует ремонта')], max_length=2)),
                ('total_area', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('has_balcony', models.CharField(choices=[('1', 'Есть'), ('2', 'Нету')], max_length=2)),
                ('calculation_options', models.CharField(choices=[('1', 'Наличные'), ('2', 'Безнал')], max_length=2)),
                ('commision', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('communication', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('price', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('moder_status', models.CharField(choices=[('1', 'Отпралено на проверку'), ('2', 'Прошло проверку'), ('3', 'Не прошло проверку')], default='1', max_length=2)),
                ('available_status', models.CharField(choices=[('1', 'Доступно'), ('2', 'Не доступно')], default='1', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('1', 'Квартиры'), ('2', 'Коттедж')], max_length=2)),
                ('type', models.CharField(choices=[('1', 'Многоквартирный'), ('2', 'Малоквартирный'), ('3', 'С гаражом'), ('4', 'Без гаража')], max_length=2)),
                ('_class', models.CharField(choices=[('1', 'Элитный'), ('2', 'Бюджетный')], max_length=2)),
                ('building_technology', models.CharField(choices=[('1', 'Монолитный каркас с керамзитом'), ('2', 'Кирпич'), ('3', 'Панель'), ('4', 'Монолитный кирпич')], max_length=2)),
                ('territory', models.CharField(choices=[('1', 'Закрытая охраняемая'), ('2', 'Закрытая не охраняемая'), ('3', 'Открытая')], max_length=2)),
                ('sea_distance', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('communal_payments', models.CharField(choices=[('1', 'Платежи'), ('2', 'Взносы'), ('3', 'Нету')], max_length=2)),
                ('ceiling_height', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('has_gas', models.CharField(choices=[('1', 'Да'), ('2', 'Нет')], max_length=1)),
                ('heating_type', models.CharField(choices=[('1', 'Центральное'), ('2', 'Водяное'), ('3', 'Воздушное'), ('4', 'Электрическое')], max_length=2)),
                ('sewerage', models.CharField(choices=[('1', 'Центарльная'), ('2', 'Промышленная'), ('3', 'Автономная')], max_length=2)),
                ('water_supply', models.CharField(choices=[('1', 'Централизованное'), ('2', 'Автономное')], max_length=2)),
                ('registration', models.CharField(max_length=50)),
                ('calculation_type', models.CharField(max_length=50)),
                ('perpose', models.CharField(max_length=50)),
                ('summ_in_contract', models.CharField(max_length=50)),
                ('housings', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('sections', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('floors', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('coords', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phrase', models.CharField(choices=[('0', ''), ('1', 'Подарок при покупке'), ('2', 'Возможен торг'), ('3', 'Квартира у моря'), ('4', 'В спальном районе'), ('5', 'Вам повезло с ценой!'), ('6', 'Для большой семьи'), ('7', 'Семейное гнездышко'), ('8', 'Отдельная парковка')], default='0', max_length=2)),
                ('color', models.CharField(choices=[('0', ''), ('1', 'RED'), ('2', 'GREEN')], default='0', max_length=2)),
                ('is_turbo', models.BooleanField(default=False)),
                ('is_big', models.BooleanField(default=False)),
                ('announcement', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='swipe.announcement')),
            ],
        ),
        migrations.CreateModel(
            name='HouseNews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('header', models.CharField(max_length=50)),
                ('body', models.TextField()),
                ('house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='swipe.house')),
            ],
        ),
        migrations.CreateModel(
            name='DeveloperHouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('developer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dv_house', to='users.developer')),
                ('house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dv_house', to='swipe.house')),
            ],
        ),
        migrations.CreateModel(
            name='ClientHouseFavourites',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_house_favourites', to='users.client')),
                ('house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='swipe.house')),
            ],
        ),
        migrations.CreateModel(
            name='ClientAnnouncementFavourites',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('announcement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='swipe.announcement')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_favourites', to='users.client')),
            ],
        ),
        migrations.CreateModel(
            name='AnnouncementRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('housing', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('section', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('floor', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('number', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('announcement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='swipe.announcement')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='users.client')),
                ('developer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='users.developer')),
            ],
        ),
        migrations.CreateModel(
            name='AnnouncementImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=swipe.models.get_upload_path)),
                ('announcement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='swipe.announcement')),
            ],
        ),
        migrations.AddField(
            model_name='announcement',
            name='house',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcement', to='swipe.house'),
        ),
    ]
